Written Questions

Q1. Run the web crawler using the configurations located at src/main/config/written_question_1a.json and
    src/main/config/written_question_1b.json. The only difference between these configurations is that one always uses
    the sequential crawler and the other always uses the parallel crawler. Inspect the profile output in
    profileData.txt.

    If you are using a multi-processor computer, you should notice that SequentialWebCrawler#crawl and
    ParallelWebCrawler#crawl took about the same amount of time, but PageParserImpl#parse took much longer when run with
    the ParallelWebCrawler.

    Why did the parser take more time when run with ParallelWebCrawler?
	
	written_question_1a.json
	Run at Wed, 1 Dec 2021 11:31:54 GMT
    com.udacity.webcrawler.SequentialWebCrawler#crawl took 0m 2s 258ms
    com.udacity.webcrawler.parser.PageParserImpl#parse took 0m 2s 235ms
	
	written_question_1b.json
	Run at Wed, 1 Dec 2021 11:32:50 GMT
    com.udacity.webcrawler.ParallelWebCrawler#crawl took 0m 2s 560ms
    com.udacity.webcrawler.parser.PageParserImpl#parse took 0m 8s 672ms
	
	Answer: The time produced by ParallelWebCrawler implementation is the total amount of parsing time from all threads' parsing methods.


Q2. Your manager ran your crawler on her old personal computer, using the configurations from Q1, and she notices that
    the sequential crawler actually outperforms the parallel crawler. She would like to know why.

    (a) Suggest one reason why the sequential web crawler was able to read more web pages than the parallel crawler.
        (Hint: Try setting "parallelism" to 1 in the JSON configs to simulate your manager's computer.)

    (b) Suggest one scenario in which the parallel web crawler will almost certainly perform better than the sequential
        crawler. Why will it perform better?
		
		
	Answers:
	(a) Parallel crawler will use more resources to create threads for example and the sequential crawler uses only one thread.
	    In very bad case scenario, when the old computer has only one core processor, the parallel crawler will be far worser than sequential one (ThreadPool with only one thread).
		
	(b) Parallel crawler will certainly beat a sequential one, when started on multi-processor (multi-core) computer, while it will be able to start more threads to do its job


Q3. Analyze your method profiler through the lens of Aspect Oriented Programming, by answering the following questions:

    (a) What cross-cutting concern is being addressed by the com.udacity.webcrawler.profiler.Profiler class?

    (b) What are the join points of the Profiler in the web crawler program?
	
	Answers:
	(a) Kind of statistic evaluation - the Profiler class allows us to aggregate information about method calls and how long it takes to execute these methods
	(b) Methods with @Profiled annotation


Q4. Identify three (3) different design patterns used in this project, and explain which interfaces, classes, and/or
    libraries use or implement those design patterns.

    For each pattern, name one thing about the pattern that you LIKED, and one thing you DISLIKED. If you did not like
    anything, you can name two things you disliked.
	
	Answer:
	(1) Builder Pattern, found in CrawlerConfiguration class
	    LIKE: it is very usefull, when we have to creare many object, which share some same data
		DISLIKE: with many class attributes it can be difficult to see what is really going on
	(2) Dependency Injection Pattern, found in WebCrawlerMain class, where two another classes (SequentialWebCrawler and ParallelWebCrawler are injected
	    depending in the configuration (see strategy pattern)
		LIKE: we do not have to focus on detailed implementation of each strategy classes, but insted use universal method calls to do the job
		DISLIKE: it is difficult to say what class implementation we are using in this moment
	(3) Strategy Pattern found in WebCrawlerModule class (strategies: Sequential or Parallel Crawler)
	    LIKE: allows to add another strategy very easy
		DISLIKE: in combination with dependency injection sometimes it is unclear how the things are connected

